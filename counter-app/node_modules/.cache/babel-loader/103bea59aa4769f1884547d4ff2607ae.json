{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ISAAC3N\\\\Dev\\\\react.js-practice\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.state.value + 1\n      });\n    };\n  }\n\n  render() {\n    //console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.props.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), this.props.children, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this); // jsx expression which gets compiled to react.CreateELement\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      value: count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/ISAAC3N/Dev/react.js-practice/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","handleIncrement","setState","render","id","children","getBadgeClasses","formatCount","onDelete","counter","classes","count"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADd,KADoB;;AAAA,SAM5BE,eAN4B,GAMV,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KAR2B;AAAA;;AAU5BI,EAAAA,MAAM,GAAG;AACL;AACA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,kBAAK,KAAKH,KAAL,CAAWI;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKJ,KAAL,CAAWK,QAFhB,eAGI;AAAM,QAAA,SAAS,EAAG,KAAKC,eAAL,EAAlB;AAAA,kBAA2C,KAAKC,WAAL;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AACA,QAAA,OAAO,EAAG,KAAKN,eADf;AAEA,QAAA,SAAS,EAAC,0BAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AACI,QAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWQ,QAAX,CAAoB,KAAKR,KAAL,CAAWS,OAAX,CAAmBL,EAAvC,CADnB;AAEI,QAAA,SAAS,EAAC,2BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFK,CAcL;AACH;;AACDE,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOW,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAE;AACT,UAAM;AAAER,MAAAA,KAAK,EAAEY;AAAT,QAAmB,KAAKb,KAA9B;AACA,WAAOa,KAAK,KAAK,CAAV,GAAa,MAAb,GAAuBA,KAA9B;AACH;;AAnC2B;;AAsChC,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nclass Counter extends Component {\r\n    state = {\r\n        value: this.props.value,\r\n    };\r\n\r\n\r\n    handleIncrement = () => {\r\n        this.setState({ value: this.state.value + 1 });\r\n    };\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <React.Fragment>\r\n                <h4>{this.props.id}</h4>\r\n                {this.props.children}\r\n                <span className= {this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button \r\n                onClick= {this.handleIncrement}\r\n                className=\"btn btn-secondary btn-sm\">Increment</button>\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.counter.id )}\r\n                    className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n            </React.Fragment> );\r\n        // jsx expression which gets compiled to react.CreateELement\r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.state.value === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const { value: count } = this.state;\r\n        return count === 0? 'Zero' :  count;\r\n    }\r\n}\r\n  \r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}